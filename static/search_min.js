async function lazyLoad(){await init("/tinysearch_engine_bg.wasm")}var loaded=!1;function autocomplete(e){var t;function n(e){if(!e)return!1;!function(e){for(var t=0;t<e.length;t++)e[t].classList.remove("autocomplete-active")}(e),t>=e.length&&(t=0),t<0&&(t=e.length-1),e[t].classList.add("autocomplete-active")}function a(t){for(var n=document.getElementsByClassName("autocomplete-items"),a=0;a<n.length;a++)t!=n[a]&&t!=e&&n[a].parentNode.removeChild(n[a])}e.addEventListener("click",(function(e){loaded||(lazyLoad(),loaded=!0)})),e.addEventListener("input",(function(e){var n,o,i,c=this.value;if(a(),!c)return!1;t=-1,(n=document.createElement("DIV")).setAttribute("id",this.id+"autocomplete-list"),n.setAttribute("class","autocomplete-items"),this.parentNode.appendChild(n);let r=search(c,3);for(i=0;i<r.length;i++){let e=r[i];(o=document.createElement("DIV")).innerHTML=e[0],o.addEventListener("click",(function(t){window.location.href=`${e[1]}?q=${encodeURIComponent(c)}`})),n.appendChild(o)}})),e.addEventListener("keydown",(function(e){var a=document.getElementById(this.id+"autocomplete-list");a&&(a=a.getElementsByTagName("div")),40==e.keyCode?(t++,n(a)):38==e.keyCode?(t--,n(a)):13==e.keyCode&&(e.preventDefault(),t>-1&&a&&a[t].click())})),document.addEventListener("click",(function(e){a(e.target)}))}let wasm;autocomplete(document.getElementById("tinysearch"));let WASM_VECTOR_LEN=0,cachedTextEncoder=new TextEncoder("utf-8");const encodeString="function"==typeof cachedTextEncoder.encodeInto?function(e,t){return cachedTextEncoder.encodeInto(e,t)}:function(e,t){const n=cachedTextEncoder.encode(e);return t.set(n),{read:e.length,written:n.length}};let cachegetUint8Memory=null;function getUint8Memory(){return null!==cachegetUint8Memory&&cachegetUint8Memory.buffer===wasm.memory.buffer||(cachegetUint8Memory=new Uint8Array(wasm.memory.buffer)),cachegetUint8Memory}function passStringToWasm(e){let t=e.length,n=wasm.__wbindgen_malloc(t);const a=getUint8Memory();let o=0;for(;o<t;o++){const t=e.charCodeAt(o);if(t>127)break;a[n+o]=t}if(o!==t){0!==o&&(e=e.slice(o)),n=wasm.__wbindgen_realloc(n,t,t=o+3*e.length);const a=getUint8Memory().subarray(n+o,n+t);o+=encodeString(e,a).written}return WASM_VECTOR_LEN=o,n}const heap=new Array(32);function getObject(e){return heap[e]}heap.fill(void 0),heap.push(void 0,null,!0,!1);let heap_next=heap.length;function dropObject(e){e<36||(heap[e]=heap_next,heap_next=e)}function takeObject(e){const t=getObject(e);return dropObject(e),t}export function search(e,t){return takeObject(wasm.search(passStringToWasm(e),WASM_VECTOR_LEN,t))}let cachedTextDecoder=new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0});function getStringFromWasm(e,t){return cachedTextDecoder.decode(getUint8Memory().subarray(e,e+t))}function addHeapObject(e){heap_next===heap.length&&heap.push(heap.length+1);const t=heap_next;return heap_next=heap[t],heap[t]=e,t}function init(e){let t;void 0===e&&(e=import.meta.url.replace(/\.js$/,"_bg.wasm"));const n={wbg:{}};if(n.wbg.__wbindgen_json_parse=function(e,t){return addHeapObject(JSON.parse(getStringFromWasm(e,t)))},"function"==typeof URL&&e instanceof URL||"string"==typeof e||"function"==typeof Request&&e instanceof Request){const a=fetch(e);t="function"==typeof WebAssembly.instantiateStreaming?WebAssembly.instantiateStreaming(a,n).catch(e=>a.then(t=>{if("application/wasm"!=t.headers.get("Content-Type"))return console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",e),t.arrayBuffer();throw e}).then(e=>WebAssembly.instantiate(e,n))):a.then(e=>e.arrayBuffer()).then(e=>WebAssembly.instantiate(e,n))}else t=WebAssembly.instantiate(e,n).then(t=>t instanceof WebAssembly.Instance?{instance:t,module:e}:t);return t.then(({instance:e,module:t})=>(wasm=e.exports,init.__wbindgen_wasm_module=t,wasm))}export default init;
